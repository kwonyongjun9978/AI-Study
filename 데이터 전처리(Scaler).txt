y=wx+b
w의 초기값은 랜덤
b의 초기값은 0
------------------------------------------------------------------------------------------------------------------------------------------------------
데이터 전처리 1
x=(1,2,10만,4,7,250만,300만,5억,43억)
y=(37,23,5,150,630,11,7,8,1300)

x의 데이터 범위가 크다(터질수있음) -> x의 데이터를 똑같은 비율로 줄인다고 해도 전혀 문제가 발생하지 않는다 ->부동소수점으로 변환

인공지능은 부동소수점 연산에 최적화 되어있다

x=(1,2,10만,4,7,250만,300만,5억,43억) 
//x의 데이터들을 43억(최대값)으로 나누어 준다(x=(1/43억,2/43억,10만/43억,4/43억,7/43억,250만/43억,300만/43억,5억/43억,1)) -> x값은 0에서 1사이 값들로 scale 이 형성된다
= MinMax Scaler

1.
x=(8,9,10)
x-x(최소) / x(최대)-x(최소)
x=(0,0.5,1)
=Minmax Scaler(정규화)


2.
데이터형태가 치우쳐져 있을때 사용(평균값주변에 있는데 데이터가 좋은 데이터이다)
X - (X의 평균) / (X의 표준편차)
=Standard Scaler(표준화)

                 
Train data      훈련(가중치)에 영향을 미친다         
Test data       훈련(가중치)에 영향을 미치지 않는다
->fit은 Train만 한다!!    


훈련데이터를 기준으로 스케일링 한다
훈련은 무조건 0과1 사이에 수렴


scaler.fit(x_train)
x_train=scaler.transform(x_train)
x_test=scaler.transform(x_test)
